package hospitalmanagement;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.HashMap;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.border.LineBorder;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import myutil.MultithredingReports;
import myutil.PatientDetails;
import myutil.SetImageIcon;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.swing.JRViewer;

/**
 *
 * @author haris
 */
public class MedicalCertificate extends javax.swing.JPanel {

    final LineBorder HOVER_BTN_BORDER = new LineBorder(new Color(0x7C7CF1), 2, true);
    final LineBorder DEFAULT_BTN_BORDER = new LineBorder(Color.WHITE, 1, true);
    final LineBorder DEFAULT_BORDER = new LineBorder(Color.blue, 1, true);
    final LineBorder INPUT_BORDER = new LineBorder(new Color(0x7c7cf1), 1, true);
    final LineBorder HOVER_BORDER = new LineBorder(new Color(0x7C7CF1), 2, true);
    final LineBorder WARNING_BORDER = new LineBorder(new Color(0xff3333), 2, true);

    final Color WARNING_COLOR = new Color(16724787);
    final Color SUCCESS_COLOR = new Color(0, 153, 0);
    final Color CLICKED_LABEL_COLOR = new Color(0, 0, 204);
    final Color REPORT_LABEL_COLOR = new Color(0, 0, 102);

    @SuppressWarnings("empty-statement")
    MultithredingReports REPORTS_THREAD = new MultithredingReports();

    Home home;

    public MedicalCertificate(Home home, PatientDetails patientDetails) {
        initComponents();

        this.home = home;

        addAllNavigationButtons();

        REPORTS_THREAD.start();
        shortKeyForRefreshingPage();
        certificate_date.setDate(home.getCurrentDate());

        addDLListener();
        setReportPrint();
        resetReportPage();

    }

    public JTextField getName_report_inputs() {
        return name_input;
    }

    public JTextField getName_Diagonosis_inputs() {
        return diagnosis_input;
    }

    public void addDLListener() {
        DocumentListener dl = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateFieldState();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateFieldState();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateFieldState();
            }

            void updateFieldState() {
                setReportPrint();

                if (total_rest_days.getText() != null) {
                    String days = total_rest_days.getText().trim();
                    if (days.length() != 0) {
                        try{
                        int days_no = Integer.parseInt(days);
                        LocalDate ld = LocalDate.now().plusDays(days_no);
                        resume_date.setDate(Date.from(ld.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant()));
                        }
                        catch(Exception exp)
                        {
                            exp.printStackTrace();
                        }
                        
                     }

                }
            }
        };

        name_input.getDocument().addDocumentListener(dl);
        age_input.getDocument().addDocumentListener(dl);
        diagnosis_input.getDocument().addDocumentListener(dl);
        total_rest_days.getDocument().addDocumentListener(dl);
        other_note.getDocument().addDocumentListener(dl);
    }

    public void addAllNavigationButtons() {

        String refresh_page_icon = "./images/refresh3.png";
        String back_page_icon = "./images/left_arrow.png";
        String next_page_icon = "./images/right_arrow.png";

        report_refresh.add(new SetImageIcon(new ImageIcon(refresh_page_icon), 30, 30), BorderLayout.CENTER);
        report_back.add(new SetImageIcon(new ImageIcon(back_page_icon), 25, 25), BorderLayout.CENTER);
        report_next.add(new SetImageIcon(new ImageIcon(next_page_icon), 25, 25), BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        prescription_report_panel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        test_report_form = new javax.swing.JPanel();
        name_input = new javax.swing.JTextField();
        print = new javax.swing.JButton();
        generate_report = new javax.swing.JButton();
        report_refresh = new javax.swing.JPanel();
        report_next = new javax.swing.JPanel();
        report_back = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        salutaion_input = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        diagnosis_input = new javax.swing.JTextField();
        point1 = new javax.swing.JCheckBox();
        treatment_type = new javax.swing.JComboBox<>();
        point2 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        point3 = new javax.swing.JCheckBox();
        admitted_date = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        point4 = new javax.swing.JCheckBox();
        total_rest_days = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        point5 = new javax.swing.JCheckBox();
        resume_date = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        certificate_date = new com.toedter.calendar.JDateChooser();
        age_input = new javax.swing.JTextField();
        opd_from_date = new com.toedter.calendar.JDateChooser();
        opd_to_date = new com.toedter.calendar.JDateChooser();
        discharged_date = new com.toedter.calendar.JDateChooser();
        jSeparator1 = new javax.swing.JSeparator();
        other_note = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        report_show_panel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 51));
        setLayout(new java.awt.BorderLayout());

        prescription_report_panel.setBackground(new java.awt.Color(255, 102, 102));
        prescription_report_panel.setPreferredSize(new java.awt.Dimension(900, 700));
        prescription_report_panel.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));
        jPanel1.setPreferredSize(new java.awt.Dimension(933, 486));
        jPanel1.setLayout(new java.awt.BorderLayout());

        test_report_form.setBackground(new java.awt.Color(255, 255, 204));
        test_report_form.setPreferredSize(new java.awt.Dimension(290, 800));

        name_input.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        name_input.setPreferredSize(new java.awt.Dimension(64, 26));
        name_input.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                name_inputMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                name_inputMouseExited(evt);
            }
        });
        name_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_inputActionPerformed(evt);
            }
        });

        print.setBackground(new java.awt.Color(102, 255, 102));
        print.setText("Print");
        print.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        print.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        print.setFocusable(false);
        print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                printMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                printMouseExited(evt);
            }
        });
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        generate_report.setBackground(new java.awt.Color(102, 255, 102));
        generate_report.setText("Show");
        generate_report.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        generate_report.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        generate_report.setFocusable(false);
        generate_report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                generate_reportMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                generate_reportMouseExited(evt);
            }
        });
        generate_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate_reportActionPerformed(evt);
            }
        });

        report_refresh.setBackground(new java.awt.Color(251, 252, 224));
        report_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        report_refresh.setPreferredSize(new java.awt.Dimension(29, 29));
        report_refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                report_refreshMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                report_refreshMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                report_refreshMouseReleased(evt);
            }
        });
        report_refresh.setLayout(new java.awt.BorderLayout());

        report_next.setBackground(new java.awt.Color(251, 252, 224));
        report_next.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        report_next.setPreferredSize(new java.awt.Dimension(25, 25));
        report_next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                report_nextMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                report_nextMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                report_nextMouseReleased(evt);
            }
        });
        report_next.setLayout(new java.awt.BorderLayout());

        report_back.setBackground(new java.awt.Color(251, 252, 224));
        report_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        report_back.setPreferredSize(new java.awt.Dimension(25, 25));
        report_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                report_backMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                report_backMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                report_backMouseReleased(evt);
            }
        });
        report_back.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("This is certify that");

        salutaion_input.setBackground(new java.awt.Color(255, 255, 204));
        salutaion_input.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mr", "Mrs", "Mast", "Miss" }));
        salutaion_input.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salutaion_input.setPreferredSize(new java.awt.Dimension(72, 26));
        salutaion_input.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                salutaion_inputItemStateChanged(evt);
            }
        });

        jLabel3.setText("Age:- ");

        jLabel5.setText("Diagnosis:-");

        diagnosis_input.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        diagnosis_input.setPreferredSize(new java.awt.Dimension(64, 26));
        diagnosis_input.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                diagnosis_inputMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                diagnosis_inputMouseExited(evt);
            }
        });
        diagnosis_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnosis_inputActionPerformed(evt);
            }
        });

        point1.setBackground(new java.awt.Color(255, 255, 204));
        point1.setSelected(true);
        point1.setText("Is under my treatment as an");
        point1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        point1.setFocusPainted(false);
        point1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                point1ItemStateChanged(evt);
            }
        });

        treatment_type.setBackground(new java.awt.Color(255, 255, 204));
        treatment_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--select--", "out-patient", "in Patient at this clinic", "Hospital" }));
        treatment_type.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        treatment_type.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                treatment_typeItemStateChanged(evt);
            }
        });

        point2.setBackground(new java.awt.Color(255, 255, 204));
        point2.setSelected(true);
        point2.setText("Was treated as an OPD Patient from");
        point2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        point2.setFocusPainted(false);
        point2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                point2ItemStateChanged(evt);
            }
        });
        point2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                point2ActionPerformed(evt);
            }
        });

        jLabel6.setText("to");

        point3.setBackground(new java.awt.Color(255, 255, 204));
        point3.setSelected(true);
        point3.setText("Was admitted as an in-door Patient on");
        point3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        point3.setFocusPainted(false);
        point3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                point3ItemStateChanged(evt);
            }
        });
        point3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                point3ActionPerformed(evt);
            }
        });

        admitted_date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                admitted_datePropertyChange(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 204));
        jLabel7.setText("and discharged on");

        point4.setBackground(new java.awt.Color(255, 255, 204));
        point4.setSelected(true);
        point4.setText("had been advised rest for");
        point4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        point4.setFocusPainted(false);
        point4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                point4ItemStateChanged(evt);
            }
        });
        point4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                point4ActionPerformed(evt);
            }
        });

        total_rest_days.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_rest_daysActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 204));
        jLabel8.setText("days");

        point5.setBackground(new java.awt.Color(255, 255, 204));
        point5.setSelected(true);
        point5.setText("is fit to resume normal duties from");
        point5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        point5.setFocusPainted(false);
        point5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                point5ItemStateChanged(evt);
            }
        });
        point5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                point5ActionPerformed(evt);
            }
        });

        resume_date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                resume_datePropertyChange(evt);
            }
        });

        jLabel9.setText("Date:-");

        certificate_date.setPreferredSize(new java.awt.Dimension(96, 26));
        certificate_date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                certificate_datePropertyChange(evt);
            }
        });

        age_input.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        age_input.setPreferredSize(new java.awt.Dimension(64, 26));
        age_input.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                age_inputMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                age_inputMouseExited(evt);
            }
        });
        age_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                age_inputActionPerformed(evt);
            }
        });

        opd_from_date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                opd_from_datePropertyChange(evt);
            }
        });

        opd_to_date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                opd_to_datePropertyChange(evt);
            }
        });

        discharged_date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                discharged_datePropertyChange(evt);
            }
        });

        other_note.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        other_note.setPreferredSize(new java.awt.Dimension(64, 26));
        other_note.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                other_noteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                other_noteMouseExited(evt);
            }
        });
        other_note.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                other_noteActionPerformed(evt);
            }
        });

        jLabel1.setText("Note:");

        javax.swing.GroupLayout test_report_formLayout = new javax.swing.GroupLayout(test_report_form);
        test_report_form.setLayout(test_report_formLayout);
        test_report_formLayout.setHorizontalGroup(
            test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(test_report_formLayout.createSequentialGroup()
                .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(test_report_formLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(point3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(test_report_formLayout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(diagnosis_input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(point1)
                                .addGroup(test_report_formLayout.createSequentialGroup()
                                    .addGap(21, 21, 21)
                                    .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(treatment_type, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(admitted_date, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))))
                                .addGroup(test_report_formLayout.createSequentialGroup()
                                    .addGap(134, 134, 134)
                                    .addComponent(discharged_date, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(test_report_formLayout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addComponent(opd_from_date, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(opd_to_date, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(point2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(test_report_formLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(jSeparator1))
                                .addGroup(test_report_formLayout.createSequentialGroup()
                                    .addComponent(salutaion_input, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(name_input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(test_report_formLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(age_input, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(certificate_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(test_report_formLayout.createSequentialGroup()
                                .addComponent(point4, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(total_rest_days, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(test_report_formLayout.createSequentialGroup()
                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, test_report_formLayout.createSequentialGroup()
                                .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(test_report_formLayout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(report_back, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(test_report_formLayout.createSequentialGroup()
                                                .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(99, 99, 99)
                                        .addComponent(generate_report, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(test_report_formLayout.createSequentialGroup()
                                        .addGap(126, 126, 126)
                                        .addComponent(report_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(79, 79, 79)
                                        .addComponent(report_next, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(13, 13, 13))
                            .addGroup(test_report_formLayout.createSequentialGroup()
                                .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(test_report_formLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel2))
                                    .addGroup(test_report_formLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(point5, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(test_report_formLayout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addComponent(resume_date, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(32, 32, 32)))
                        .addGap(9, 9, 9)))
                .addContainerGap())
            .addGroup(test_report_formLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(other_note, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        test_report_formLayout.setVerticalGroup(
            test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, test_report_formLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(name_input, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(salutaion_input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(test_report_formLayout.createSequentialGroup()
                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(age_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(diagnosis_input, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(point1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(treatment_type, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(point2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(opd_from_date, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(opd_to_date, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(point3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(admitted_date, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(test_report_formLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(point4)
                                    .addComponent(total_rest_days, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(discharged_date, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(point5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resume_date, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(test_report_formLayout.createSequentialGroup()
                        .addComponent(certificate_date, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(other_note, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addGap(14, 14, 14)
                .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(report_next, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, test_report_formLayout.createSequentialGroup()
                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(generate_report, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(test_report_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(report_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(report_back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(208, 208, 208))
        );

        jPanel1.add(test_report_form, java.awt.BorderLayout.WEST);

        report_show_panel.setPreferredSize(new java.awt.Dimension(500, 800));

        javax.swing.GroupLayout report_show_panelLayout = new javax.swing.GroupLayout(report_show_panel);
        report_show_panel.setLayout(report_show_panelLayout);
        report_show_panelLayout.setHorizontalGroup(
            report_show_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
        );
        report_show_panelLayout.setVerticalGroup(
            report_show_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );

        jPanel1.add(report_show_panel, java.awt.BorderLayout.CENTER);

        prescription_report_panel.add(jPanel1, java.awt.BorderLayout.CENTER);

        add(prescription_report_panel, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void name_inputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_name_inputMouseEntered
        if (name_input.getBorder() != WARNING_BORDER) {
            name_input.setBorder(HOVER_BORDER);
        }
    }//GEN-LAST:event_name_inputMouseEntered

    private void name_inputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_name_inputMouseExited
        if (name_input.getBorder() != WARNING_BORDER) {
            name_input.setBorder(INPUT_BORDER);
        }
    }//GEN-LAST:event_name_inputMouseExited

    private void name_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name_inputActionPerformed

    private void printMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseEntered
        print.setBorder(HOVER_BORDER);
    }//GEN-LAST:event_printMouseEntered

    private void printMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseExited
        print.setBorder(DEFAULT_BTN_BORDER);
    }//GEN-LAST:event_printMouseExited


    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        try {
            if (medical_jasper_print != null) {
                JasperPrintManager.printReport(medical_jasper_print, false);
                resetReportPage();
//                report_status.setText("Report printed Succesfully");
//                report_status.setForeground(SUCCESS_COLOR);
                medical_jasper_print = null;
            } else {
                setReportPrint();
                printActionPerformed(evt);

            }
        } catch (JRException ex) {
//            report_status.setText("Report not printed");
//            report_status.setForeground(WARNING_COLOR);
        }
    }//GEN-LAST:event_printActionPerformed


    private void generate_reportMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generate_reportMouseEntered
        generate_report.setBorder(HOVER_BTN_BORDER);
    }//GEN-LAST:event_generate_reportMouseEntered

    private void generate_reportMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generate_reportMouseExited
        generate_report.setBorder(DEFAULT_BTN_BORDER);
    }//GEN-LAST:event_generate_reportMouseExited

    private void generate_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate_reportActionPerformed

        setReportsIntoDatabase();
        setReportPrint();


    }//GEN-LAST:event_generate_reportActionPerformed

    private void report_refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_report_refreshMouseClicked
        resetReportPage();

    }//GEN-LAST:event_report_refreshMouseClicked

    private void report_refreshMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_report_refreshMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_report_refreshMouseExited

    private void report_refreshMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_report_refreshMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_report_refreshMouseReleased

    private void report_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_report_backMouseClicked
        home.showReportOnWindow("Referal");
    }//GEN-LAST:event_report_backMouseClicked

    private void report_backMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_report_backMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_report_backMouseExited

    private void report_backMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_report_backMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_report_backMouseReleased

    private void report_nextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_report_nextMouseClicked
        home.showReportOnWindow("Prescription");
    }//GEN-LAST:event_report_nextMouseClicked

    private void report_nextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_report_nextMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_report_nextMouseExited

    private void report_nextMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_report_nextMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_report_nextMouseReleased

    private void diagnosis_inputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diagnosis_inputMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_diagnosis_inputMouseEntered

    private void diagnosis_inputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_diagnosis_inputMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_diagnosis_inputMouseExited

    private void diagnosis_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnosis_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diagnosis_inputActionPerformed

    private void point2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_point2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_point2ActionPerformed

    private void point3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_point3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_point3ActionPerformed

    private void point4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_point4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_point4ActionPerformed

    private void total_rest_daysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_rest_daysActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_total_rest_daysActionPerformed

    private void point5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_point5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_point5ActionPerformed

    private void age_inputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_age_inputMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_age_inputMouseEntered

    private void age_inputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_age_inputMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_age_inputMouseExited

    private void age_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_age_inputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_age_inputActionPerformed

    private void treatment_typeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_treatment_typeItemStateChanged
        setReportPrint();
    }//GEN-LAST:event_treatment_typeItemStateChanged

    private void point1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_point1ItemStateChanged
        setReportPrint();

    }//GEN-LAST:event_point1ItemStateChanged

    private void point2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_point2ItemStateChanged
        setReportPrint();
    }//GEN-LAST:event_point2ItemStateChanged

    private void point3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_point3ItemStateChanged
        setReportPrint();
    }//GEN-LAST:event_point3ItemStateChanged

    private void point4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_point4ItemStateChanged
        setReportPrint();
    }//GEN-LAST:event_point4ItemStateChanged

    private void point5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_point5ItemStateChanged
        setReportPrint();
    }//GEN-LAST:event_point5ItemStateChanged

    private void salutaion_inputItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_salutaion_inputItemStateChanged
        setReportPrint();
    }//GEN-LAST:event_salutaion_inputItemStateChanged

    private void opd_from_datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_opd_from_datePropertyChange
        setReportPrint();
    }//GEN-LAST:event_opd_from_datePropertyChange

    private void opd_to_datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_opd_to_datePropertyChange
        setReportPrint();
    }//GEN-LAST:event_opd_to_datePropertyChange

    private void admitted_datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_admitted_datePropertyChange
        setReportPrint();
    }//GEN-LAST:event_admitted_datePropertyChange

    private void discharged_datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_discharged_datePropertyChange
        setReportPrint();
    }//GEN-LAST:event_discharged_datePropertyChange

    private void resume_datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_resume_datePropertyChange
        setReportPrint();
    }//GEN-LAST:event_resume_datePropertyChange

    private void certificate_datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_certificate_datePropertyChange
        setReportPrint();
    }//GEN-LAST:event_certificate_datePropertyChange

    private void other_noteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_other_noteMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_other_noteMouseEntered

    private void other_noteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_other_noteMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_other_noteMouseExited

    private void other_noteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_other_noteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_other_noteActionPerformed

    public void removeSelecetdReportUsingKey() {
        KeyStroke clt_x = KeyStroke.getKeyStroke(KeyEvent.VK_X, KeyEvent.CTRL_DOWN_MASK);
        Action remove = new AbstractAction("remove") {
            @Override
            public void actionPerformed(ActionEvent e) {
                System.out.println("hhh");
            }
        };
        String k = "remove";
        remove.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_X);
        test_report_form.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(clt_x, k);
        test_report_form.getActionMap().put(k, remove);
    }

    public void shortKeyForRefreshingPage() {
        KeyStroke clt_r = KeyStroke.getKeyStroke(KeyEvent.VK_R, KeyEvent.CTRL_DOWN_MASK);
        Action refresh = new AbstractAction("refresh") {
            @Override
            public void actionPerformed(ActionEvent e) {
                resetReportPage();
            }
        };
        String k = "refresh";
        refresh.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_R);
        test_report_form.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(clt_r, k);
        test_report_form.getActionMap().put(k, refresh);
    }

    public void setReportsIntoDatabase() {
//        try {
//            Database db = Database.getInstance();
//            int size = selected_report_list.getModel().getSize();
//            int pno = Integer.parseInt(pno_report_input.getText());
//            long date_in_time = date_report_input.getDate().getTime();
//            for (int i = 0; i < size; i++) {
//                db.insertTestReport(pno, (String) lm.getElementAt(i), date_in_time);
//            }
//        } catch (NumberFormatException exp) {
//            report_status.setText("Enter valid patient number");
//            report_status.setForeground(Color.red);
//        }
//        report_show_panel.revalidate();
//        report_show_panel.repaint();

    }
    JasperPrint medical_jasper_print = null;

    private void setReportPrint() {
        report_show_panel.removeAll();
        report_show_panel.revalidate();
        report_show_panel.repaint();
        try {

            HashMap a = new HashMap();
            int id = 2;
            if (id == -1 || name_input.getText() == null) {
                throw new ValidInputException();
            }

            a.put("date", certificate_date.getDate());
            a.put("point1", getContent());

            Connection con = REPORTS_THREAD.getConnection();
            if (con != null) {

                JasperReport jr = REPORTS_THREAD.getCompliedMedicalCertificate();

                if (jr != null) {
                    medical_jasper_print = JasperFillManager.fillReport(jr, a, con);
                    JRViewer v = new JRViewer(medical_jasper_print);
                    report_show_panel.setLayout(new BorderLayout());
                    report_show_panel.add(v);
                } else {
                    //report_status.setText("No report is availalble");
                    //report_status.setForeground(Color.red);
                }

            }
        } catch (NumberFormatException | JRException ex) {
            System.out.println(ex.getMessage());
//            report_status.setText("No report is availalble ");
//            report_status.setForeground(Color.red);
        } catch (ValidInputException exp) {
//            report_status.setText("Enter valid inputs");
//            report_status.setForeground(Color.red);
        }
        report_show_panel.revalidate();
        report_show_panel.repaint();
    }

    public String getContent() {

        boolean isPointSelected = false;

        String content = "";
        String patient_name = getFullCapitaliseName(name_input.getText().trim());
        String patient_age = age_input.getText().trim();
        String designation = salutaion_input.getSelectedItem().toString();
        String dignosis = diagnosis_input.getText().trim();

        String gender_type = "She";
        if (designation.equalsIgnoreCase("mr") || designation.equalsIgnoreCase("mast")) {
            gender_type = "He";
        }

        if (patient_name != null && patient_name.length() != 0) {
            content += "This is to certify that " + designation + ". " + patient_name + ".\n";
        }
        if (patient_age != null && patient_age.length() != 0) {
            content += "Age " + patient_age + " years" + ". ";
        }
        if (dignosis != null && dignosis.length() != 0) {
            content += "Diagnosis " + dignosis + ".\n";
        } else {
            content += "\n";
        }
        content += "\n";
        if (point1.isSelected() && !treatment_type.getSelectedItem().toString().equals("--select--")) {
            content += getBulletChar();
            content += " Is under my treatment as " + treatment_type.getSelectedItem().toString() + ".\n";
            isPointSelected = true;
        }

        if (point2.isSelected()) {
            if (opd_from_date.getDate() != null && opd_to_date.getDate() != null) {
                content += getBulletChar();
                content += " Was treated as an OPD Patient from " + getStrDate(opd_from_date.getDate()) + " to " + getStrDate(opd_to_date.getDate()) + ".\n";
            }
            isPointSelected = true;
        }
        if (point3.isSelected()) {
            if (admitted_date.getDate() != null && discharged_date.getDate() != null) {
                content += getBulletChar();
                content += " Was admitted as an in-door Patient on " + getStrDate(admitted_date.getDate()) + " and discharged on " + getStrDate(discharged_date.getDate()) + ".\n";
            }
        }
        if (point4.isSelected()) {
            if (total_rest_days.getText().length() != 0) {
                content += getBulletChar();
                content += " " + gender_type + " had been advised rest for " + total_rest_days.getText() + " days " + ".\n";
            }
            isPointSelected = true;
        }
        if (point5.isSelected()) {
            if (resume_date.getDate() != null) {
                content += getBulletChar();
                content += " " + gender_type + " is fit to resume normal duties from " + getStrDate(resume_date.getDate()) + ".\n";
            }
            isPointSelected = true;
        }
        if (other_note.getText() != null && other_note.getText().trim().length() != 0) {
            if (isPointSelected) {
                content += "\n";
            }
            content += getCapitaliseName(other_note.getText().trim());
        }

        return content;
    }

    public String getStrDate(Date date) {
        if (date != null) {
            SimpleDateFormat ft = new SimpleDateFormat("dd/MM/yyyy");
            return ft.format(date);
        }
        return null;
    }

    public String getBulletChar() {
        String circleBulletPoint = "\u2022";
        String triangleBulletPoint = "\u2023";

        return circleBulletPoint;
    }

    public String getFullCapitaliseName(String name) {
        String names[] = name.split("\\s+");

        String ans = "";
        for (String str : names) {
            ans += getCapitaliseName(str);
            ans += " ";
        }
        return ans.trim();
    }

    public String getCapitaliseName(String name) {
        if (name.length() > 0) {
            StringBuffer sb = new StringBuffer(name);
            sb.setCharAt(0, Character.toUpperCase(sb.charAt(0)));
            return new String(sb);
        }
        return null;
    }

    /*
    public void printReport(PatientDetails patientDetails, boolean with_dialog) throws JRException {

        if (patientDetails != null) {

            HashMap a = new HashMap();
            a.put("pno", patientDetails.getPid());

            Connection con = REPORTS_THREAD.getConnection();
            if (con != null) {
                JasperReport jr = REPORTS_THREAD.getCompliedTestReport();
                if (jr != null) {
                    JasperPrint jp = JasperFillManager.fillReport(jr, a, con);
                    JasperPrintManager.printReport(jp, with_dialog);

                    resetReportPage();
                    setTestReportPatientDetailsObject(null);

                } else {

                }
                report_show_panel.revalidate();
                report_show_panel.repaint();
            }
        } else {
            report_status.setText("No report is availalble");
            report_status.setForeground(Color.red);
        }

    }*/
    public void resetReportPage() {
        age_input.setText("");
        name_input.setText("");
        certificate_date.setDate(home.getCurrentDate());

        diagnosis_input.setText("");
        opd_from_date.setDate(null);
        opd_to_date.setDate(null);
        admitted_date.setDate(null);
        discharged_date.setDate(null);
        resume_date.setDate(null);

        total_rest_days.setText("");
        other_note.setText("");

//        report_status.setText("");
        report_show_panel.removeAll();
        report_show_panel.revalidate();
        report_show_panel.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser admitted_date;
    private javax.swing.JTextField age_input;
    private com.toedter.calendar.JDateChooser certificate_date;
    private javax.swing.JTextField diagnosis_input;
    private com.toedter.calendar.JDateChooser discharged_date;
    private javax.swing.JButton generate_report;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField name_input;
    private com.toedter.calendar.JDateChooser opd_from_date;
    private com.toedter.calendar.JDateChooser opd_to_date;
    private javax.swing.JTextField other_note;
    private javax.swing.JCheckBox point1;
    private javax.swing.JCheckBox point2;
    private javax.swing.JCheckBox point3;
    private javax.swing.JCheckBox point4;
    private javax.swing.JCheckBox point5;
    private javax.swing.JPanel prescription_report_panel;
    private javax.swing.JButton print;
    private javax.swing.JPanel report_back;
    private javax.swing.JPanel report_next;
    private javax.swing.JPanel report_refresh;
    private javax.swing.JPanel report_show_panel;
    private com.toedter.calendar.JDateChooser resume_date;
    private javax.swing.JComboBox<String> salutaion_input;
    private javax.swing.JPanel test_report_form;
    private javax.swing.JTextField total_rest_days;
    private javax.swing.JComboBox<String> treatment_type;
    // End of variables declaration//GEN-END:variables
}
